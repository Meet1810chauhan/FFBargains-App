// import React, { useState, useEffect } from 'react';
// import {
//   Dimensions,
//   ScrollView,
//   StyleSheet,
//   View,
// } from 'react-native';
// import { useNavigation } from '@react-navigation/native';
// import { StackNavigationProp } from '@react-navigation/stack';
// import { RootStackParamList } from '../navigation/types'; 
// import CustomeProductDetails from '../component/CustomeProductDetails';
// import images from '../theme/Images';
// import Colors from '../theme/Colors';
// import Strings from '../theme/Strings';

// const { width } = Dimensions.get('window');

// type NavigationProps = StackNavigationProp<RootStackParamList, 'OnBoarding'>;

// const Home = () => {
//   const navigation = useNavigation<NavigationProps>();

//   // Store full product data
//   const [allData, setAllData] = useState<Array<{ 
//     id: number;
//     producName: string;
//     image: any;
//     descriptionProduct: string;
//     priceSell: number;
//     price: number;
//     offer: number;
//   }>>([]);

//   useEffect(() => {
//     const initialData = [
//       { id: 1, producName: 'Pink Babies', image: images.logo8, descriptionProduct: 'Teddy Bear for babies', priceSell: 40.92, price: 65.98, offer: 35 },
//       { id: 2, producName: 'Blue Dragon', image: images.logo9, descriptionProduct: 'Gaming Desk', priceSell: 250.0, price: 500.0, offer: 50 },
//       { id: 3, producName: 'Red Toy Car', image: images.logo8, descriptionProduct: 'Kids Toy Car', priceSell: 30.92, price: 50.98, offer: 40 },
//       { id: 4, producName: 'Gaming Keyboard', image: images.logo9, descriptionProduct: 'RGB Keyboard', priceSell: 80.0, price: 120.0, offer: 33 },
//     ];
//     setAllData(initialData); // Load only once
//   }, []);

//   // Filters based on different conditions
//   const flashSaleData = allData.filter(item => item.offer >= 30); // Example: Show products with offer ‚â• 30%
//   const newestArrivalsData = allData.filter(item => item.id % 2 === 0); // Example: Even ID products are 'new arrivals'

//   return (
//     <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
//       <CustomeProductDetails
//         leftHeaderText={Strings.flash}
//         rightButtonText={Strings.viewAll}
//         imageRightButton={images.logo10}
//         dataofArray={flashSaleData} // Use filtered data
//       />
//       <CustomeProductDetails
//         leftHeaderText={Strings.newestArrivals}
//         rightButtonText={Strings.viewAll}
//         imageRightButton={images.logo10}
//         dataofArray={newestArrivalsData} // Use another filtered data
//       />
//     </ScrollView>
//   );
// };

// export default Home;

// const styles = StyleSheet.create({
//   container: {
//     backgroundColor: Colors.white,
//     flex: 1,
//   },
// });



// container: {
//     width: 163,
//     height: 267,
//     borderWidth: 1,
//     borderColor: Colors.white,
//     borderRadius: 5,
//     backgroundColor: "white", // Ensure background color is set
  
//     // iOS shadow styles (ignored on Android)
//     shadowColor: Colors.black,
//     shadowOpacity: 0.2,
//     shadowRadius: 5,
//     shadowOffset: {
//       height: 2,
//       width: 1,
//     },
  
//     // Android shadow styles
//     elevation: 5, // Increase this for a stronger shadow
  
//     marginLeft: "2%",
//     marginTop: "7%",
//   },
  

//const loginUser = async () => {
//     if (!isCheckValid()) return;

//     try {
//       const userCredential = await auth().signInWithEmailAndPassword(email, pass);
//       const user = userCredential.user;
  
//       console.log("‚úÖ Login Successful:", email);
  
//       if (!user) {
//         console.error("‚ùå No user found!");
//         return;
//       }
  
//       const idToken = await user.getIdToken(true);
//       console.log("üõ°Ô∏è ID Token:", idToken);
  
//       const response = await fetch("https://yourapi.com/api/login", {
//         method: "POST",
//         headers: {
//           "Content-Type": "application/json",
//           Authorization: `Bearer ${idToken}`,
//         },
//         body: JSON.stringify({
//           email: email,
//           password: pass,
//         }),
//       });
  
//       if (!response.ok) {
//         throw new Error(`HTTP Error ${response.status}: ${response.statusText}`);
//       }
  
//       const jsonResponse = await response.json();
//       console.log("‚úÖ API Response:", jsonResponse);
  
//       // Save login status
//       dispatch(setIsLogin(true));
//       navigation.dispatch(
//         CommonActions.reset({
//           index: 0,
//           routes: [{ name: "BottomNav" }],
//         })
//       );
//     } catch (error) {
//       console.error("‚ùå Login Error:", error.message);
//       setInvalid("Invalid Email or Password");
//     }
//   };
  